syntax = "proto3";

// Message kinds.
enum Kind {
  Error = 0; // A generic error response.
  OK = 1; // A generic ok response.

  Watch = 2; // Watch request.
  Unsubscribe = 3; // Unsubscribe request.
  Subscribed = 4; // Subscribed response.

  EventItemAdd = 5; // Watch add item event.
  EventItemUpdate = 6; // Watch update item event.
  EventItemDelete = 7; // Watch delete item event.
  EventError = 8; // Watch error which means that watch is invalid.
}

// Watch source.
enum Source {
  // Get the data from Kubernetes control planes.
  Kubernetes = 0;
  // Get the data from Talos apid.
  Talos = 1;
}

// Message metadata which helps matching request vs response and routing to any specific subscription.
message Metadata {
  // Uid match/route identifier.
  string uid = 1;
}

// Web socket message.
message Message {
  Kind kind = 1;
  Metadata metadata = 2;
  // Spec can vary on the message kind.
  // Can either have some specific data for the kind or be empty.
  string spec = 3;
}

message WatchSpec {
  // Resource name to watch.
  string resource = 1;
  // Source to get the watch data from.
  Source source = 2;
}

// Watch response.
message SubscribedSpec {
  // Subscription uid generated for the subscription.
  string uid = 1;
}

// Unsubscribe request.
message UnsubscribeSpec {
  // Subscription to destroy.
  string uid = 1;
}

message ErrorSpec {
  string error = 1;
}

message ItemUpdateSpec {
  bytes old = 1;
  bytes new = 2;
}
